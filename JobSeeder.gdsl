import hudson.model.*
import javaposse.jobdsl.dsl.helpers.BuildParametersContext.*

folder('AstroImager')
pipelineJob('AstroImager/Sequence') {
    parameters {
        stringParam('sName', 'Default')
        textParam('sJson', '''{ "batch" : { "LIGHT_1_120_1-0" :  { "name" : "generic", "filter" : "CLS", "bulp" : 120, "gain" : 1, "offset" : 0, "binning" : 1, "focus" : 0, "delay" : 1, "repeat" : 4, "type" : "LIGHT"  },
                   "LIGHT_3_180_1-0" :  { "name" : "generic",  "filter" : "DB", "bulp" : 180, "gain" : 1, "offset" : 0, "binning" : 1, "focus" : 0, "delay" : 1, "repeat" : 4, "type" : "LIGHT"  },    
                   "LIGHT_5_240_1-0" :  { "name" : "generic",  "filter" : "Ha", "bulp" : 240, "gain" : 1, "offset" : 0, "binning" : 1, "focus" : -15, "delay" : 1, "repeat" : 4, "type" : "LIGHT"  },
                   "BLACK_120_1_0" :  { "file" : "BLACK_120_1_0" , "repeat" : 2 },
                   "BLACK_180_1_0" :  { "file" : "BLACK_180_1_0" , "repeat" : 2 },
                   "BLACK_240_1_0" :  { "file" : "BLACK_240_1_0" , "repeat" : 2 }},
 "sequence" :  ["LIGHT_1_120_1-0",
                        "LIGHT_3_180_1-0",
                        "LIGHT_5_240_1-0",
                        "LIGHT_5_240_1-0"],
 "name" : "default",
 "init" : { "object" : "none", "goto" : false, "platesolve" : true, "autofocus" : true, "autoguide" : true, "cooler" : true, "temp" : -15,
             "camera" : "ZWO ASI533C Pro", "focuser" : "ASI EAF", "filterwheel" : "ASI EFW",  "guider" : "indi_mgen" },
 "repeat" : 2
}''')
        fileParam('./upload.json')
        stringParam('sCount', '1')
        booleanParam('sSaveJson', false)
        booleanParam('sSaveOnly', false)
    }

    logRotator(5, -1, 1, -1)

    definition {
        cpsScm {
            scm {
                git {
                    branch('master')
                    remote {
                        credentials('GitHubWerumingerI')
                        url('https://github.com/Weruminger/JenkinsAstroImageSequencer')
                    }
                }
            }
            scriptPath('src/Sequence.gdsl')
        }
    }
}
pipelineJob('AstroImager/EBatch') {
    parameters {
        stringParam( 'bName',  'Default')
        stringParam( 'bTriggerJob',  'Default')
        textParam( 'bJson', '{"name" : "generic", "filter" : "CLS", "bulp" : 30, "gain" : 100, "offset" : 1, "focus" : 0, "binning" : 1, "dizzle" : true, "delay" : 1, "repeat" : 10, "type" : "LIGHT"  }')
        fileParam('./uploadBatch.json')
        stringParam('bCount', 'Default')
        stringParam('bFocuser', 'Default')
        stringParam('bFilterWheel', 'Default')
        stringParam('bCamera', 'Default')
        booleanParam('bSaveJson', false)
        booleanParam('bSaveOnly', false)
    }

    logRotator(5, -1, 1, -1)

    definition {
        cpsScm {
            scm {
                git {
                    branch('master')
                    remote {
                        credentials('GitHubWerumingerI')
                        url('https://github.com/Weruminger/JenkinsAstroImageSequencer')
                    }
                }
            }
            scriptPath('src/EBatch.gdsl')
        }
    }
}
pipelineJob('AstroImager/PiCamBatch') {
    description('Automated Image Batch Job to be used wit Pi Camera')
    keepDependencies(false)
    parameters {
        stringParam('NAME', 'OBJECT_NNN_XXX_EEE_GGG_TTT_DDD')
        stringParam('EXPOSURE', '6')
        choiceParam('TYPE', ['LIGHT', 'DARK', 'BIAS', 'FLAT', 'FLATBIAS'])
        stringParam('GAIN', '200')
        booleanParam('BAYER', true)
        choiceParam('RESOLUTION', ['1640x1232', '3280x2464', '1280x720', '640x480'])
        choiceParam('OUTPUT', ['jpeg', 'png', 'gif', 'bmp', 'yuv', 'rgb', 'rgba', 'bgr', 'bgra', 'raw'])
        booleanParam('ARCHIVEIMAGES', true)
        stringParam('COUNT', '1')
        stringParam('IMAGEFOLDER', 'out/TTT')
        choiceParam('RUNMODE', ['SCRIPT', 'FILE', 'TEST'])
        stringParam('WORKSPASE', '/var/lib/jenkins/workspace/PiCamera/samples' )
    }
    logRotator(5, -1, 1, -1)
    // definition {
        definition {
            cpsScm {
                scm {
                    git {
                        branch('master')
                        remote {
                            credentials('GitHubWerumingerI')
                            url('https://github.com/Weruminger/JenkinsAstroImageSequencer')
                        }
                    }
                }
                scriptPath('src/PiCamBatch.gdsl')
            }
        }
    // }
    disabled(false)
//   configure {
//       it / 'properties' / 'jenkins.model.BuildDiscarderProperty' {
//           strategy {
//               'daysToKeep'('14')
//               'numToKeep'('-1')
//               'artifactDaysToKeep'('7')
//               'artifactNumToKeep'('-1')
//           }
//       }
//   }
}
